<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BoardDAO">

	<select id="selectBoardList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select T.rnum,
				T.boardIdx,
				T.boardTitle,
				T.createId,
				T.createDate,
				T.updateId,
				T.updateDate
		from (select format(@rownum:=@rownum+1, 0) AS rnum,
				board_idx AS boardIdx,
				board_title AS boardTitle,
				create_id AS createId,
				date_format(create_date, '%Y-%M-%d %H:%i:%s') as createDate,
		        update_id AS updateId,
		        date_format(create_date, '%Y-%M-%d %H:%i:%s') as updateDate
		from tb_board, (select @rownum:=0 from dual) R
		where 1=1
		AND use_yn = 'Y'
		<if test="searchKeyword != '' and searchKeyword != null and searchKeyword != 'undefined'">
			<if test="searchCondition == 'id'">				
				AND create_id like concat('%',#{searchKeyword},'%')			
			</if>
			<if test="searchCondition == 'title'">
				AND board_title like concat('%',#{searchKeyword},'%')			
			</if>
		</if>
		order by create_date) T
		order by Cast(replace(T.rnum, ',', '') as Unsigned) desc
		limit #{recordCountPerPage} offset #{firstIndex}
	</select>
	
	<select id="selectBoardListCnt" parameterType="java.util.HashMap" resultType="int">
		select count(board_idx)
		from tb_board
		where 1=1
		AND use_yn = 'Y'
		<if test="searchKeyword != '' and searchKeyword != null and searchKeyword != 'undefined'">
			<if test="searchCondition == 'id'">				
				AND create_id = #{searchKeyword}			
			</if>
			<if test="searchCondition == 'title'">			
				AND board_title =#{searchKeyword}			
			</if>
		</if>
	</select>
	
	<insert id="insertBoard" parameterType="java.util.HashMap">
		insert into tb_board(
			board_title,
		    board_content,
		    file_group_idx,
		    create_id,
		    create_date,
		    update_id,
		    update_date,
		    use_yn
		) values(
			#{boardTitle},
		    #{boardContent},
		    null,
		    #{memberId},
		    CURRENT_TIMESTAMP(),
		    #{memberId},
		    CURRENT_TIMESTAMP(),
		    'Y'
		)
	</insert>
	
	<update id="updateBoard" parameterType="java.util.HashMap">
		
		UPDATE tb_board 
		SET board_title = #{boardTitle},
			board_content = #{boardContent},
			update_id = #{memberId},
			update_date = CURRENT_TIMESTAMP()
			WHERE board_idx = #{boardIdx}
		
	</update>
	
	
	<select id="selectBoardDetail" parameterType="int" resultType="java.util.HashMap">
	
		select
				board_idx AS boardIdx,
				board_title AS boardTitle,
				board_content AS boardContent,
				file_group_idx AS fileGrouspIdx,
				create_id AS createId,
				date_format(create_date, '%Y-%m-%d %H:%i:%s') as createDate,
		        update_id AS updateId,
		        date_format(create_date, '%Y-%m-%d %H:%i:%s') as updateDate
		from tb_board
		WHERE board_idx = #{boardIdx}
	
	
	</select>

	<update id="deleteBoard" parameterType="java.util.HashMap">
	
	update tb_board
            set use_yn = 'N',
				update_id = #{memberId},
				update_date = CURRENT_TIMESTAMP()
                WHERE board_idx = #{boardIdx}

	</update>
	
	<insert id="insertReply" parameterType="java.util.HashMap">
		insert into tb_reply(
			board_idx,
			parent_reply_idx,
			reply_content,
			create_id,
			create_date,
			update_id,
			update_date,
			reply_level,
			use_yn)
		values(
			#{boardIdx},
			#{parentReplyIdx},
			#{replyContent},
			#{memberId},
			CURRENT_TIMESTAMP(),
			#{memberId},
			CURRENT_TIMESTAMP(),
			1,
			'Y'
			)
	</insert>
	<!-- 결과값을 조작한다고 하면 밑에서부터
		쿼리 제작 후 컨트롤러
		URL 어떻게 표현할건지 제작
		2024.09.11 수요일에는 파일업로드/다운로드
		2024.09.12 회원관리/로그인/계시판 목요일에 스스로 혼자
	 -->
	 
	 <select id="selectBoardReply" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 
		 with recursive cte as(
				SELECT 1 AS reply_level,
						reply_idx,
			            reply_content,
			            create_id,
			            create_date,
			            convert(reply_idx, char) as path,
			            parent_reply_idx
			    FROM tb_reply
			    WHERE board_idx = #{boardIdx}
			    AND parent_reply_idx is null
			    AND use_yn ='Y'
			    UNION ALL
			    SELECT 1+cte.reply_level,
						r.reply_idx,
			            r.reply_content,
			            r.create_id,
			            r.create_date,
			            concat(path, '-', r.reply_idx) as path,
			            r.parent_reply_idx
			    FROM tb_reply AS r
			    inner join cte 
			    on r.parent_reply_idx = cte.reply_idx
			    WHERE r.board_idx = #{boardIdx}
			    AND r.use_yn = 'Y'
			)
			select reply_idx AS replyIdx,
					reply_content AS replyContent,
			        create_id AS createId,
			        DATE_FORMAT(create_date, '%Y-%m-%d %H:%i:%s') AS createDate,
			        reply_level-1 AS replyLevel,
			        path,
			        parent_reply_idx AS parentReplyIdx
			from cte
			order by convert(substring_index(path, '-', 1), unsigned) desc, path
	 
	 </select>
	 
	 
</mapper>